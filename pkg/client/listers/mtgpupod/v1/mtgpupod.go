/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1 "lsalab.nthu/mtgpu/pkg/apis/mtgpupod/v1"
)

// MtgpuPodLister helps list MtgpuPods.
type MtgpuPodLister interface {
	// List lists all MtgpuPods in the indexer.
	List(selector labels.Selector) (ret []*v1.MtgpuPod, err error)
	// MtgpuPods returns an object that can list and get MtgpuPods.
	MtgpuPods(namespace string) MtgpuPodNamespaceLister
	MtgpuPodListerExpansion
}

// mtgpuPodLister implements the MtgpuPodLister interface.
type mtgpuPodLister struct {
	indexer cache.Indexer
}

// NewMtgpuPodLister returns a new MtgpuPodLister.
func NewMtgpuPodLister(indexer cache.Indexer) MtgpuPodLister {
	return &mtgpuPodLister{indexer: indexer}
}

// List lists all MtgpuPods in the indexer.
func (s *mtgpuPodLister) List(selector labels.Selector) (ret []*v1.MtgpuPod, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MtgpuPod))
	})
	return ret, err
}

// MtgpuPods returns an object that can list and get MtgpuPods.
func (s *mtgpuPodLister) MtgpuPods(namespace string) MtgpuPodNamespaceLister {
	return mtgpuPodNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MtgpuPodNamespaceLister helps list and get MtgpuPods.
type MtgpuPodNamespaceLister interface {
	// List lists all MtgpuPods in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.MtgpuPod, err error)
	// Get retrieves the MtgpuPod from the indexer for a given namespace and name.
	Get(name string) (*v1.MtgpuPod, error)
	MtgpuPodNamespaceListerExpansion
}

// mtgpuPodNamespaceLister implements the MtgpuPodNamespaceLister
// interface.
type mtgpuPodNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MtgpuPods in the indexer for a given namespace.
func (s mtgpuPodNamespaceLister) List(selector labels.Selector) (ret []*v1.MtgpuPod, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MtgpuPod))
	})
	return ret, err
}

// Get retrieves the MtgpuPod from the indexer for a given namespace and name.
func (s mtgpuPodNamespaceLister) Get(name string) (*v1.MtgpuPod, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("mtgpupod"), name)
	}
	return obj.(*v1.MtgpuPod), nil
}
